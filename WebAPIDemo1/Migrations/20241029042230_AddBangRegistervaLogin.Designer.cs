// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPIDemo1.Data;

#nullable disable

namespace WebAPIDemo1.Migrations
{
    [DbContext(typeof(GameDataContext))]
    [Migration("20241029042230_AddBangRegistervaLogin")]
    partial class AddBangRegistervaLogin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPIDemo1.Data.Game", b =>
                {
                    b.Property<int>("gameid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("gameid"));

                    b.Property<int>("categoryid")
                        .HasColumnType("integer");

                    b.Property<string>("imageurl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("gameid");

                    b.HasIndex("categoryid");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.GameCategory", b =>
                {
                    b.Property<int>("categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("categoryid"));

                    b.Property<string>("categoryname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("categoryid");

                    b.ToTable("GameCategories");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.Login", b =>
                {
                    b.Property<int>("customerid")
                        .HasColumnType("integer");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("customerid");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.Register", b =>
                {
                    b.Property<int>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("customerid"));

                    b.Property<string>("confirmpassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("customerid");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.Game", b =>
                {
                    b.HasOne("WebAPIDemo1.Data.GameCategory", "GameCategory")
                        .WithMany("Games")
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameCategory");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.Login", b =>
                {
                    b.HasOne("WebAPIDemo1.Data.Register", "Register")
                        .WithOne("Login")
                        .HasForeignKey("WebAPIDemo1.Data.Login", "customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.GameCategory", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("WebAPIDemo1.Data.Register", b =>
                {
                    b.Navigation("Login")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
